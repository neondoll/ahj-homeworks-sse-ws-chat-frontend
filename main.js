(()=>{"use strict";class t{constructor(){this._api=new WebSocket("wss://ahj-homeworks-sse-ws-chat-backend-64z9.onrender.com")}addEventListener(t,e,s=void 0){this._api.addEventListener(t,e,s)}send(t){this._api.send(t)}}const e=async t=>{const e={headers:{"Content-Type":"application/json"},method:t.method};return"POST"!==t.method&&"PUT"!==t.method||(e.body=JSON.stringify(t.body)),await fetch("https://ahj-homeworks-sse-ws-chat-backend-64z9.onrender.com"+t.url,e)};class s{static async new(t){const s=await e({url:"/new-user",method:"POST",body:t});return await s.json()}}class n{constructor(t){this._chat=void 0,this._container=t,this._modal=void 0,this._user=void 0,this._websocket=void 0}bindToDOM(){if(!(this._container instanceof HTMLElement))throw new Error("container is not HTMLElement");this._container.innerHTML=n.markup,this._chat=this._container.querySelector(n.selectorChat),this._modal=this._container.querySelector(n.selectorModal),this._modal.querySelector("form").addEventListener("submit",this.onSubmitModalForm),this._chat.classList.add("hidden"),this._modal.classList.add("active")}init(){this.registerEvents(),this.bindToDOM()}onEnterChatInput(t){this.sendMessage({msg:t.target.value,type:"send",user:this._user}),t.target.value=""}onMessageWebsocket(t){const e=JSON.parse(t.data),s=document.querySelector(n.selectorChatMessages),a=document.querySelector(n.selectorChatUserList),o=document.querySelectorAll(n.selectorChatUser);if(!e.type)for(let t=0;t<o.length;t++)o[t].remove();for(let t=0;t<e.length;t++){const s=e[t];a.insertAdjacentHTML("beforeEnd",n.markupChatUser(s,this._user&&this._user.name===s.name))}void 0!==e.user&&s.insertAdjacentHTML("beforeEnd",n.markupChatMessage(e,e.user.name===this._user.name))}async onSubmitModalForm(t){t.preventDefault();const e=t.target.querySelector(n.selectorModalFormHint),a=t.target.querySelector(n.selectorModalFormInput);e.textContent="";const o=await s.new({name:a.value});if("ok"!==o.status)return console.error(o.status,o.message),void(e.textContent=o.message);this._user=o.user,this._chat.classList.remove("hidden"),this._modal.classList.remove("active"),a.value="",this.subscribeOnEvents()}onUnloadWindow(){this.sendMessage({msg:"вышел",type:"exit",user:this._user})}registerEvents(){this.onEnterChatInput=this.onEnterChatInput.bind(this),this.onMessageWebsocket=this.onMessageWebsocket.bind(this),this.onSubmitModalForm=this.onSubmitModalForm.bind(this),this.onUnloadWindow=this.onUnloadWindow.bind(this)}sendMessage(t){this._websocket.send(JSON.stringify(t))}subscribeOnEvents(){this._websocket=new t,this._websocket.addEventListener("message",this.onMessageWebsocket),this._chat.querySelector(n.selectorChatInput).addEventListener("keyup",(t=>{"Enter"===t.code&&this.onEnterChatInput(t)})),window.addEventListener("unload",this.onUnloadWindow)}static get markup(){return'\n      <div class="chat">\n        <ul class="chat__user-list"></ul>\n        <div class="chat__container">\n          <div class="chat__messages"></div>\n          <input class="chat__input" placeholder="Type your message here">\n        </div>\n      </div>\n      <div class="modal">\n        <form class="modal__content">\n          <h2 class="modal__header">Выберите псевдоним</h2>\n          <div class="modal__body">\n            <div class="modal__form-group">\n              <input class="modal__form-input">\n              <div class="modal__form-hint"></div>\n            </div>\n          </div>\n          <div class="modal__footer">\n            <button class="modal__ok" type="submit">Продолжить</button>\n          </div>\n        </form>\n      </div>\n    '}static markupChatMessage(t,e){return`\n      <div class="chat__message chat-message${e?" chat-message--yourself":""}">\n        <p class="chat-message__header">${t.user.name}${e?" (You)":""}</p>\n        <p class="chat-message__text">${t.msg}</p>\n      </div>\n    `}static markupChatUser(t,e){return`\n      <li class="chat__user${e?" chat__user--yourself":""}" data-id="${t.id}">\n        ${t.name}${e?" (You)":""}\n      </li>\n    `}static get selectorChat(){return".chat"}static get selectorChatInput(){return".chat__input"}static get selectorChatMessages(){return".chat__messages"}static get selectorChatUser(){return".chat__user"}static get selectorChatUserList(){return".chat__user-list"}static get selectorModal(){return".modal"}static get selectorModalFormHint(){return".modal__form-hint"}static get selectorModalFormInput(){return".modal__form-input"}}const a=document.querySelector("#app");new n(a).init()})();